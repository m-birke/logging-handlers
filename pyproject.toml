[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "logging-extended-handlers"
dynamic = ["version"]
description = "Extending logging.handlers"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = ["logging", "log", "handlers", "logging handlers", "log handlers", "http"]
authors = [
  { name = "mbirke", email = "wesci@web.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/m-birke/logging-handlers#readme"
Issues = "https://github.com/m-birke/logging-handlers/issues"
Source = "https://github.com/m-birke/logging-handlers"

[tool.hatch.version]
path = "src/logging_extended_handlers/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-dependency",
  "pytest_socket",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/logging_extended_handlers tests}"

[tool.coverage.run]
source_pkgs = ["logging_extended_handlers", "tests"]
branch = true
parallel = true
omit = [
  "src/logging_extended_handlers/__about__.py",
]

[tool.coverage.paths]
logging_extended_handlers = ["src/logging_extended_handlers", "*/logging-extended-handlers/src/logging_extended_handlers"]
tests = ["tests", "*/logging-extended-handlers/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py37"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = []
